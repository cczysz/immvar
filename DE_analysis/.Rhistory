knit2html('hw1.rmd')
install.packages("knitr")
# Charles Czysz
# Homework 1
### Gillespie 1.2:
Calculate the frequency of the three alkaline phosphatase alleles in the English population
```{r Question 1}
data <- data.frame(genotype=c("SS","SF","FF","SI","FI","II"), number=c(141,111,28,32,15,5))
total <- 2 * sum(data$number)
n_S <- 2 * data[data$genotype=="SS",]$number + data[data$genotype=="SF",]$number + data[data$genotype=="SI",]$number
n_F <- 2 * data[data$genotype=="FF",]$number + data[data$genotype=="SF",]$number + data[data$genotype=="FI",]$number
n_I <- 2 * data[data$genotype=="II",]$number + data[data$genotype=="SI",]$number + data[data$genotype=="FI",]$number
f_S <- n_S / total
f_F <- n_F / total
f_I <- n_I / total
```
The frequency of the S, F, and I alleles are `r f_S`, `r f_F`, and `r f_I`, respectively.
These frequencies sum to 1:
```{r q1-answer}
1 == f_S + f_F + f_I
```
### Gillespie 1.7:
Graph the male and female allele frequencies over several generations for a population that is started with all $A_1 A_1$ females ($p_f$ = 1) and A2 males ($p_m$ = 0).
### Question 3
**a. Estimate the allele frequencies in each population**
NGH
```{r Q3-NGH}
data <- data.frame(MM=c(2,112),NM=c(32,74),NN=c(269,17))
n_alleles <- 2 * sum(data[1,])
f_M <- (2 * data[1,1] + data[1,2]) / n_alleles
f_N <- (2 * data[1,3] + data[1,2]) / n_alleles
allele_freq <- data.frame(M=0.05940594,N=0.9405941)
```
For the New Guinea population, the frequency of the M allele is `r f_M` and the frequency of the N allele is `r f_N`.
GI
```{r Q3-GI}
n_alleles <- 2 * sum(data[2,])
f_M <- (2 * data[2,1] + data[2,2]) / n_alleles
f_N <- (2 * data[2,3] + data[2,2]) / n_alleles
allele_freq <- rbind(allele_freq,c(0.7339901,0.2660099))
```
For the Guatemalan Indian population, the frequency of the M allele is `r f_M` and the frequency of the N allele is `r f_N`.
**b. Does each population appear to be in HWE?**
NGH
```{r Q3b-NGH}
observed <- data[1,]
expected <- sum(observed) * c(allele_freq[1,1]^2,2*allele_freq[1,1]*allele_freq[1,2],allele_freq[1,2]^2)
chi_sq <- sum((observed-expected)^2 / expected)
p_value <- dchisq(chi_sq,2)
```
With a $\chi$-Squared test p-value of `r p_value`, the hypothesis that the population is in HWE is not rejected.
GI
```{r Q3b-GI}
observed <- data[2,]
expected <- sum(observed) * c(allele_freq[2,1]^2,2*allele_freq[2,1]*allele_freq[2,2],allele_freq[2,2]^2)
chi_sq <- sum((observed-expected)^2 / expected)
p_value <- dchisq(chi_sq,2)
```
With a $\chi$-Squared test p-value of `r p_value`, the hypothesis that the population is in HWE is not rejected.
**c. HWE if population samples combined?**
```{r Q3c}
observed <- c(sum(data[,1]),sum(data[,2]),sum(data[,3]))
freqs <- c(2 * observed[1] + observed[2],2 * observed[3] + observed[2]) / (2 *sum(observed))
expected <- c(freqs[1]^2 , 2 * freqs[1] * freqs[2] , freqs[2]^2) * sum(observed)
chi_sq <- sum((observed-expected)^2 / expected)
pvalue <- dchisq(chi_sq,2)
```
Because the p-value, `r pvalue`, is < 0.05, the hypothesis that the combined populations are in HWE is rejected.
### Question 4
Estimate the allele frequencies of each of the alleles. Also calculate the number of each
genotype expected in the sample under Hardy-Weinberg equilibrium.
```{r Q4}
data <- data.frame(gt=c('aa','bb','cc','ab','ac','bc'),count=c(2,53,5,13,3,21))
f_a <- (2 * data[1,2] + data[4,2] + data[5,2]) / (2 * sum(data$count))
f_b <- (2 * data[2,2] + data[4,2] + data[6,2]) / (2 * sum(data$count))
f_c <- (2 * data[3,2] + data[5,2] + data[6,2]) / (2 * sum(data$count))
```
The frequencies for alleles a, b, and c are `r f_a`, `r f_b`, and `r f_c`, respectively.
The expected population distribution under HWE are:
```{r Q4b}
e_count <- sum(data$count) * c(f_a^2 , f_b^2 , f_c^2 , 2 * f_a * f_b, 2*f_a*f_c,2*f_b*f_c)
data.frame(gt=c('aa','bb','cc','ab','ac','bc'),expected=e_count,observed=data$count)
chisq = sum((data$count - e_count)^2 / e_count)
pvalue = dchisq(chisq,5)
```
pvalue
chisq
data$count
e_count
library(affy)
install.packages("biocLite")
source("http://bioconductor.org/biocLite.R")
biocLite("affy")
browseVignettes("affy")
library(qqPlot)
install.packages("qqPlot")
library(BiocInstaller)
biocLite
install.packages("BiocInstaller")
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite()
biocLite("topGO")
library(topGO)
library('BiocInstaller')
biocLite('pd.hugene.1.0.st.v1')
setwd("/Volumes/stranger-lab/immvar_data")
setwd('../immvar/DE_analysis/')
source('bt_celltype.R',echo=T)
